{"version":3,"sources":["Components/MainWeather.module.css","Components/DetailedWeather.module.css","Components/City.module.css","Components/ForecastCard.module.css","Components/Details.module.css","Components/CurrentWeather.module.css","Pages/Index.module.css","Components/Forecast.module.css","Components/MainWeather.jsx","Components/Details.jsx","Components/DetailedWeather.jsx","Components/CurrentWeather.jsx","Components/City.jsx","Components/weather.js","Components/ForecastCard.jsx","Components/Forecast.jsx","Pages/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainWeather","props","state","icon","temperature","weather","this","className","styles","mainWeatherContainer","mainWeatherIcon","mainWeatherData","dataTemperature","dataWeather","Component","Details","value","units","detailsContainer","DetailedWeather","highTemp","lowTemp","wind","rain","sunrise","sunset","detailsContainerColumn","CurrentWeather","mainWeather","detailedWeather","temp","currentWeatherContainer","City","city","region","date","Date","dateString","getDay","getDate","getMonth","cityContainer","cityName","weatherCode","t01d","t01n","t02d","t02n","t03d","t03n","t04d","t04n","t05d","t05n","d01d","d01n","d02d","d02n","d03d","d03n","r01d","r01n","r02d","r02n","r03d","r03n","f01d","f01n","r04d","r04n","r05d","r05n","r06d","r06n","s01d","s01n","s02d","s02n","s03d","s03n","s04d","s04n","s05d","s05n","s06d","s06n","a01d","a01n","a02d","a02n","a03d","a03n","a04d","a04n","a05d","a05n","a06d","a06n","c01d","c01n","c02d","c02n","c03d","c03n","c04d","c04n","u00d","u00n","ForecastCard","day","parse","cardContainer","Number","toFixed","Forecast","items","isLoaded","error","that","navigator","geolocation","watchPosition","position","lat","coords","latitude","lon","longitude","apiCall","fetch","then","res","json","result","console","log","data","setState","forecastContainer","map","item","key","datetime","high_temp","Index","container","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2e0f141a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWeatherContainer\":\"MainWeather_mainWeatherContainer__2Oj0z\",\"mainWeatherIcon\":\"MainWeather_mainWeatherIcon__3Ro0x\",\"mainWeatherData\":\"MainWeather_mainWeatherData__2LIyK\",\"dataTemperature\":\"MainWeather_dataTemperature__2elUD\",\"dataWeather\":\"MainWeather_dataWeather__TLD2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"DetailedWeather_detailsContainer__1_uuK\",\"detailsContainerColumn\":\"DetailedWeather_detailsContainerColumn__1xYxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cityContainer\":\"City_cityContainer__1MNFP\",\"cityName\":\"City_cityName__xS7TX\",\"dateString\":\"City_dateString__20hZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"ForecastCard_cardContainer__10Zt6\",\"day\":\"ForecastCard_day__146c2\",\"temp\":\"ForecastCard_temp__2I0UF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"Details_detailsContainer__39Yqr\",\"value\":\"Details_value__vo1u9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentWeatherContainer\":\"CurrentWeather_currentWeatherContainer__3bz4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Index_container__21PD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastContainer\":\"Forecast_forecastContainer__3FRG7\"};","import React, { Component } from 'react';\r\nimport styles from './MainWeather.module.css';\r\n\r\nexport default class MainWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      icon: this.props.icon,\r\n      temperature: this.props.temperature,\r\n      weather: this.props.weather\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { temperature, weather, icon } = this.state;\r\n\r\n    return (\r\n      <div className={styles.mainWeatherContainer}>\r\n        <div className={styles.mainWeatherIcon}>\r\n          <i className={icon}></i>\r\n        </div>\r\n        <div className={styles.mainWeatherData}>\r\n          <span className={styles.dataTemperature}>{temperature}Â°</span>\r\n          <span className={styles.dataWeather}>{weather}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport styles from './Details.module.css';\r\n\r\nexport default class Details extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: this.props.value,\r\n      units: this.props.units\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, units } = this.state;\r\n\r\n    return (\r\n      <div className = {styles.detailsContainer}>\r\n        <span className = {styles.value}>{value}</span> \r\n        <span>{units}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Details from './Details';\r\nimport styles from './DetailedWeather.module.css';\r\n\r\nexport default class DetailedWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      highTemp: this.props.highTemp,\r\n      lowTemp: this.props.lowTemp,\r\n      wind: this.props.wind,\r\n      rain: this.props.rain,\r\n      sunrise: this.props.sunrise,\r\n      sunset: this.props.sunset\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { highTemp, lowTemp, wind, rain, sunrise, sunset } = this.state;\r\n\r\n    return (\r\n      <div className = {styles.detailsContainer}>\r\n        <div className = {styles.detailsContainerColumn}>\r\n          <Details value= {highTemp} units = \"High\" />\r\n          <Details value= {lowTemp} units = \"Low\" />\r\n        </div>\r\n        <div className = {styles.detailsContainerColumn}>\r\n          <Details value= {wind} units = \"Wind\" />\r\n          <Details value= {rain} units = \"Rain\" />\r\n        </div>\r\n        <div className = {styles.detailsContainerColumn}>\r\n          <Details value= {sunrise} units = \"Sunrise\" />\r\n          <Details value= {sunset} units = \"Sunset\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport MainWeather from './MainWeather';\r\nimport DetailedWeather from './DetailedWeather';\r\nimport styles from './CurrentWeather.module.css';\r\n\r\nexport default class CurrentWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainWeather: this.props.mainWeather,\r\n      detailedWeather: this.props.detailedWeather\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {icon, temp, weather} = this.state.mainWeather;\r\n    const {highTemp, lowTemp, wind, rain, sunrise, sunset} = this.state.detailedWeather;\r\n\r\n    return (\r\n      <div className = {styles.currentWeatherContainer}>\r\n        <MainWeather icon = {icon}\r\n                     temperature = {temp}\r\n                     weather = {weather}\r\n        />\r\n        <DetailedWeather highTemp = {highTemp}\r\n                         lowTemp = {lowTemp}\r\n                         wind = {wind}\r\n                         rain = {rain}\r\n                         sunrise = {sunrise}\r\n                         sunset = {sunset}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from './City.module.css';\r\n\r\nexport default class City extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: this.props.city,\r\n      region: this.props.region,\r\n      date: new Date()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { city, region, date } = this.state;\r\n    const days = ['Sunday', 'Monday', 'Thuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let dateString = `${days[date.getDay()]}, ${date.getDate()}'th of ${months[date.getMonth()]}`;\r\n\r\n    return (\r\n      <div className = {styles.cityContainer}>\r\n        <span className = {styles.cityName}>{city}, {region}</span>\r\n        <span className = {styles.dateString}>{dateString}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const weatherCode = {\r\n    t01d: 'wi wi-day-thunderstorm',\r\n    t01n: 'wi wi-night-thunderstorm',\r\n    t02d: 'wi wi-day-thunderstorm',\r\n    t02n: 'wi wi-night-thunderstorm',\r\n    t03d: 'wi wi-day-thunderstorm',\r\n    t03n: 'wi wi-night-thunderstorm',\r\n    t04d: 'wi wi-day-lightning',\r\n    t04n: 'wi wi-night-lightning',\r\n    t05d: 'wi wi-day-lightning',\r\n    t05n: 'wi wi-night-lightning',\r\n    d01d: 'wi wi-day-snow',\r\n    d01n: 'wi wi-night-alt-hail',\r\n    d02d: 'wi wi-day-snow',\r\n    d02n: 'wi wi-night-alt-hail',\r\n    d03d: 'wi wi-day-snow',\r\n    d03n: 'wi wi-night-alt-hail',\r\n    r01d: 'wi wi-day-rain',\r\n    r01n: 'wi wi-night-alt-rain',\r\n    r02d: 'wi wi-day-rain',\r\n    r02n: 'wi wi-night-alt-rain',\r\n    r03d: 'wi wi-day-rain-wind',\r\n    r03n: 'wi wi-night-rain-wind',\r\n    f01d: 'wi wi-day-rain',\r\n    f01n: 'wi wi-night-alt-rain',\r\n    r04d: 'wi wi-day-showers',\r\n    r04n: 'wi wi-night-alt-showers',\r\n    r05d: 'wi wi-day-showers',\r\n    r05n: 'wi wi-night-alt-showers',\r\n    r06d: 'wi wi-showers',\r\n    r06n: 'wi wi-showers',\r\n    s01d: 'wi wi-day-snow',\r\n    s01n: 'wi wi-night-alt-snow',\r\n    s02d: 'wi wi-snow',\r\n    s02n: 'wi wi-snow',\r\n    s03d: 'wi wi-snow-wind',\r\n    s03n: 'wi wi-snow-wind',\r\n    s04d: 'wi wi-day-rain-mix',\r\n    s04n: 'wi wi-night-rain-mix',\r\n    s05d: 'wi wi-day-sleet',\r\n    s05n: 'wi wi-night-alt-sleet',\r\n    s06d: 'wi wi-snow-wind',\r\n    s06n: 'wi wi-snow-wind',\r\n    a01d: 'wi wi-day-fog',\r\n    a01n: 'wi wi-night-fog',\r\n    a02d: 'wi wi-smoke',\r\n    a02n: 'wi wi-smoke',\r\n    a03d: 'wi wi-day-fog',\r\n    a03n: 'wi wi-night-fog',\r\n    a04d: 'wi wi-sandstorm',\r\n    a04n: 'wi wi-sandstorm',\r\n    a05d: 'wi wi-day-fog',\r\n    a05n: 'wi wi-night-fog',\r\n    a06d: 'wi wi-day-fog',\r\n    a06n: 'wi wi-night-fog',\r\n    c01d: 'wi wi-day-sunny',\r\n    c01n: 'wi wi-night-clear',\r\n    c02d: 'wi wi-day-cloudy',\r\n    c02n: 'wi wi-night-alt-cloudy',\r\n    c03d: 'wi wi-day-cloudy',\r\n    c03n: 'wi wi-night-alt-cloudy',\r\n    c04d: 'wi wi-cloudy',\r\n    c04n: 'wi wi-cloudy',\r\n    u00d: 'wi wi-day-fog',\r\n    u00n: 'wi wi-night-fog'\r\n}\r\n\r\nexport default weatherCode;","import React, { Component } from 'react';\r\nimport styles from './ForecastCard.module.css';\r\n\r\nimport weatherCode from './weather';\r\n\r\nexport default class ForecastCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      day: new Date(Date.parse(this.props.day)),\r\n      icon: this.props.icon,\r\n      temp: this.props.temp\r\n    }\r\n  }\r\n  render() {\r\n    const {day, icon, temp} = this.state;\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n    return (\r\n      <div className = {styles.cardContainer} >\r\n        <span className = {styles.day}>{days[day.getDay()]}</span>\r\n        <i className = {weatherCode[icon]}></i>\r\n        <span className = {styles.temp}>{Number(temp).toFixed(0)}Â°</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ForecastCard from './ForecastCard';\r\nimport styles from './Forecast.module.css';\r\n\r\nexport default class Forecast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      error: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let that = this;\r\n\r\n    navigator.geolocation.watchPosition(function(position) {\r\n\r\n      let lat = position.coords.latitude;\r\n      let lon = position.coords.longitude;\r\n\r\n      let apiKey = `3f323ac45ffd4f0d83323fa593986f16`;\r\n      let apiCall = `https://api.weatherbit.io/v2.0/forecast/daily?&days=6&lat=${lat}&lon=${lon}&key=${apiKey}`;\r\n\r\n      fetch(apiCall)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result.data);\r\n        that.setState({\r\n          isLoaded: true,\r\n          items: result.data\r\n        });\r\n      },\r\n        error => {\r\n          that.setState({\r\n            isLoaded: true,\r\n            error: error\r\n          })\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { isLoaded, error, items } = this.state;\r\n\r\n    if (!isLoaded) {\r\n      return <div>Loading</div>\r\n    } else if (error) {\r\n      return <div>Error</div>\r\n    } else {\r\n      return (\r\n        <div className = {styles.forecastContainer}>\r\n          {items.map(item => (\r\n            <ForecastCard key = {item.datetime} day = {item.datetime} temp = {item.high_temp} icon = {item.weather.icon} />\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CurrentWeather from '../Components/CurrentWeather';\r\nimport styles from './Index.module.css';\r\n\r\nimport City from '../Components/City';\r\nimport Forecast from '../Components/Forecast';\r\n\r\nexport default class Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainWeather: {\r\n        icon: 'wi wi-day-sunny',\r\n        temp: '21',\r\n        weather: 'Mostly Sunny'\r\n      },\r\n      detailedWeather: {\r\n        highTemp: '25Â°',\r\n        lowTemp: '11Â°',\r\n        wind: '7 mph',\r\n        rain: '0%',\r\n        sunrise: '05:27',\r\n        sunset: '20:57'\r\n      },\r\n      city: 'Saint Petersburg',\r\n      region: 'RU'\r\n    }\r\n  }\r\n  render() {\r\n    const {city, region, mainWeather, detailedWeather} = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className = {styles.container}>\r\n          <City city = {city} region = {region} />\r\n          <CurrentWeather mainWeather = {mainWeather} detailedWeather = {detailedWeather} />\r\n          <Forecast />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport './css/weather-icons.min.css';\nimport Index from './Pages/Index';\n\nfunction App() {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}